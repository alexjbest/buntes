N = 3 # number of flows
p = 3
d = 2
G = graphs.BalancedTree(p,d) # a (p+1)-regular tree of depth d
G.delete_edge(G.edges()[0])
F = G.subgraph(G.connected_component_containing_vertex(0)) # A single 'flow'
H = N*F
H.add_cycle([len(F.vertices())*i for i in range(N)])
show(H)
#latex(H) # for the code
